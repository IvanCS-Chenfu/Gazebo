cmake_minimum_required(VERSION 3.8)
project(my_quadracopter)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(gazebo_msgs REQUIRED)
find_package(ament_index_cpp REQUIRED)
find_package(xacro REQUIRED)
find_package(yaml-cpp REQUIRED)


# uncomment the following section in order to fill in
# further dependencies manually.
# find_package(<dependency> REQUIRED)

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

install(DIRECTORY
  launch urdf worlds config
  DESTINATION share/${PROJECT_NAME}/
)

add_executable(sim_quadcopter src/sim_quadcopter.cpp)

ament_target_dependencies(sim_quadcopter rclcpp gazebo_msgs ament_index_cpp)

target_link_libraries(sim_quadcopter yaml-cpp)

install(TARGETS sim_quadcopter
  DESTINATION lib/${PROJECT_NAME}
)

ament_package()
